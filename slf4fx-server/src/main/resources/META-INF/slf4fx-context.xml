<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <!-- This makes it possible to specify java.net.SocketAddress values
    (e.g. :1234 below) as Strings.
    They will be converted into java.net.InetSocketAddress objects by Spring.  -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.net.SocketAddress">
                    <bean class="org.apache.mina.integration.beans.InetSocketAddressEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>version</value>
            </list>
        </property>
    </bean>

    <bean id="stateMachine" class="org.room13.slf4fx.SLF4FxStateMachine"/>

    <!-- if you have to restrict access to known applications only
    <bean id="stateMachine" class="org.room13.slf4fx.SLF4FxStateMachine">
        <property name="knownApplicaions">
            <map>
                <entry key="myApplication" value="mySecret"/>
            </map>
        </property>
    </bean>
    -->

    <bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
        <constructor-arg>
            <bean class="org.room13.slf4fx.SLF4FxProtocolEncoder"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.room13.slf4fx.SLF4FxProtocolDecoder"/>
        </constructor-arg>
    </bean>

    <bean id="filterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
        <property name="filters">
            <map>
                <entry key="codec" value-ref="codecFilter"/>
            </map>
        </property>
    </bean>

    <bean id="serverHandler" class="org.apache.mina.core.service.IoHandlerAdapter"
          factory-bean="stateMachine" factory-method="createIoHandler"/>

    <bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"
          init-method="bind" destroy-method="unbind">
        <property name="defaultLocalAddress" value=":8888"/>
        <property name="handler" ref="serverHandler"/>
        <property name="reuseAddress" value="true"/>
        <property name="filterChainBuilder" ref="filterChainBuilder"/>
    </bean>
</beans>
